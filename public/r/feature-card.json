{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-card",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/feature-card-demo.tsx",
      "content": "import { BorderRotate } from \"@/components/nurui/animated-gradient-border\";\nimport { Star, Zap, Shield } from \"lucide-react\";\n\nexport function FeatureCardDemo() {\n  return (\n    <div className=\"py-20\">\n      <BorderRotate\n        className=\"p-8\"\n        animationSpeed={1}\n        gradientColors={{\n          primary: \"#1f2937\",\n          secondary: \"#4f46e5\",\n          accent: \"#8b5cf6\",\n        }}\n      >\n        <div className=\"text-white\">\n          <h2 className=\"text-2xl font-bold mb-6 text-center\">\n            Enhanced Feature Showcase\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"text-center space-y-3\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full mx-auto mb-3 flex items-center justify-center\">\n                <Zap className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"font-semibold\">Lightning Speed</h3>\n              <p className=\"text-gray-300 text-sm mb-3\">\n                Ultra-fast performance with optimized rendering\n              </p>\n              <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-lg transition-colors text-xs\">\n                Try Now\n              </button>\n            </div>\n            <div className=\"text-center space-y-3\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full mx-auto mb-3 flex items-center justify-center\">\n                <Shield className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"font-semibold\">Secure & Safe</h3>\n              <p className=\"text-gray-300 text-sm mb-3\">\n                Enterprise-grade security for your data\n              </p>\n              <button className=\"px-4 py-2 bg-green-600 hover:bg-green-500 rounded-lg transition-colors text-xs\">\n                Learn More\n              </button>\n            </div>\n            <div className=\"text-center space-y-3\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full mx-auto mb-3 flex items-center justify-center\">\n                <Star className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"font-semibold\">Premium Quality</h3>\n              <p className=\"text-gray-300 text-sm mb-3\">\n                Professional-grade animated components\n              </p>\n              <button className=\"px-4 py-2 bg-purple-600 hover:bg-purple-500 rounded-lg transition-colors text-xs\">\n                Upgrade\n              </button>\n            </div>\n          </div>\n          <div className=\"mt-8 text-center\">\n            <button className=\"px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 rounded-lg transition-all transform hover:scale-105\">\n              Get Started Today\n            </button>\n          </div>\n        </div>\n      </BorderRotate>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/animated-gradient-border.tsx",
      "content": "\"use client\";\nimport React, {\n  CSSProperties,\n  ReactNode,\n  HTMLAttributes,\n  useEffect,\n  useRef,\n} from 'react';\n\ntype AnimationMode = 'auto-rotate' | 'rotate-on-hover' | 'stop-rotate-on-hover';\n\ninterface BorderRotateProps extends Omit<HTMLAttributes<HTMLDivElement>, 'className'> {\n  children: ReactNode;\n  className?: string;\n  animationMode?: AnimationMode;\n  animationSpeed?: number;\n  gradientColors?: {\n    primary: string;\n    secondary: string;\n    accent: string;\n  };\n  backgroundColor?: string;\n  borderWidth?: number;\n  borderRadius?: number;\n  style?: CSSProperties;\n}\n\nconst defaultGradientColors = {\n  primary: '#584827',\n  secondary: '#c7a03c',\n  accent: '#f9de90'\n};\n\nconst BorderRotate: React.FC<BorderRotateProps> = ({\n  children,\n  className = '',\n  animationMode = 'auto-rotate',\n  animationSpeed = 5,\n  gradientColors = defaultGradientColors,\n  backgroundColor = '#1b1d2b',\n  borderWidth = 2,\n  borderRadius = 20,\n  style = {},\n  ...props\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (animationMode !== 'auto-rotate') return;\n\n    let angle = 0;\n    let animationFrame: number;\n\n    const rotate = () => {\n      angle = (angle + 1) % 360;\n      if (ref.current) {\n        ref.current.style.setProperty('--gradient-angle', `${angle}deg`);\n      }\n      animationFrame = requestAnimationFrame(rotate);\n    };\n\n    rotate();\n\n    return () => cancelAnimationFrame(animationFrame);\n  }, [animationMode]);\n\n  const handleMouseEnter = () => {\n    if (animationMode === 'rotate-on-hover') {\n      startRotation();\n    } else if (animationMode === 'stop-rotate-on-hover') {\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (animationMode === 'rotate-on-hover') {\n      cancelAnimationFrame(animationRef.current);\n    } else if (animationMode === 'stop-rotate-on-hover') {\n      startRotation();\n    }\n  };\n\n  const animationRef = useRef<number>(0);\n  const angleRef = useRef<number>(0);\n\n  const startRotation = () => {\n    const rotate = () => {\n      angleRef.current = (angleRef.current + 1) % 360;\n      if (ref.current) {\n        ref.current.style.setProperty('--gradient-angle', `${angleRef.current}deg`);\n      }\n      animationRef.current = requestAnimationFrame(rotate);\n    };\n    rotate();\n  };\n\n  const getAnimationClass = () => {\n    return '';\n  };\n\n  const combinedStyle: CSSProperties = {\n    '--gradient-primary': gradientColors.primary,\n    '--gradient-secondary': gradientColors.secondary,\n    '--gradient-accent': gradientColors.accent,\n    '--bg-color': backgroundColor,\n    '--border-width': `${borderWidth}px`,\n    '--border-radius': `${borderRadius}px`,\n    '--animation-duration': `${animationSpeed}s`,\n    '--gradient-angle': '0deg',\n    border: `${borderWidth}px solid transparent`,\n    borderRadius: `${borderRadius}px`,\n    backgroundImage: `\n      linear-gradient(${backgroundColor}, ${backgroundColor}),\n      conic-gradient(\n        from var(--gradient-angle),\n        ${gradientColors.primary} 0%,\n        ${gradientColors.secondary} 30%,\n        ${gradientColors.accent} 60%,\n        ${gradientColors.primary} 100%\n      )\n    `,\n    backgroundClip: 'padding-box, border-box',\n    backgroundOrigin: 'padding-box, border-box',\n    ...style,\n  } as CSSProperties;\n\n  return (\n    <div\n      ref={ref}\n      className={`gradient-border-component ${getAnimationClass()} ${className}`}\n      style={combinedStyle}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport { BorderRotate };\n",
      "type": "registry:component"
    }
  ]
}